"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.parseDirectory = void 0;
const fileStore_js_1 = require("./fileStore.js");
const parser_1 = require("@babel/parser");
const parseFile = (file) => {
    const ast = (0, parser_1.parse)(file.content, {
        sourceType: "module",
        plugins: ["jsx", "typescript", "classProperties", "decorators-legacy", "dynamicImport", "objectRestSpread", "optionalChaining", "nullishCoalescingOperator"]
    });
    return ast;
};
const toParsedFile = (file) => {
    return {
        ...file,
        ast: parseFile(file)
    };
};
/**
 * Parse files from a repository
 */
const parseDirectory = async ({ path, extensions, ignore }) => {
    const root = await (0, fileStore_js_1.readDir)(path, extensions, ignore);
    const transform = (file) => {
        if (file.type === "file") {
            return toParsedFile(file);
        }
        else if (file.type === "config") {
            return {
                type: "config",
                config: file.config
            };
        }
        else {
            const allChildren = file.children.map(transform);
            const configs = allChildren.filter(f => f.type === "config");
            const children = allChildren.filter(f => f.type !== "config");
            const parsedDirectory = {
                ...file,
                children,
                configs,
            };
            parsedDirectory.children.forEach(child => child.parent = parsedDirectory);
            return parsedDirectory;
        }
    };
    return transform(root);
};
exports.parseDirectory = parseDirectory;
